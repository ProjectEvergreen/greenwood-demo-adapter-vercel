diff --git a/node_modules/wc-compiler/src/dom-shim.js b/node_modules/wc-compiler/src/dom-shim.js
index 389b996..1851840 100644
--- a/node_modules/wc-compiler/src/dom-shim.js
+++ b/node_modules/wc-compiler/src/dom-shim.js
@@ -123,21 +123,26 @@ class HTMLTemplateElement extends HTMLElement {
 // https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry
 class CustomElementsRegistry {
   constructor() {
-    this.customElementsRegistry = {};
+    // TODO this should probably be a set or otherwise follow the spec?
+    // https://github.com/ProjectEvergreen/wcc/discussions/145
+    this.customElementsRegistry = new Map();
   }
 
   define(tagName, BaseClass) {
-    this.customElementsRegistry[tagName] = BaseClass;
+    // TODO this should probably fail as per the spec...
+    // e.g. if(this.customElementsRegistry.set(tagName))
+    // https://github.com/ProjectEvergreen/wcc/discussions/145
+    this.customElementsRegistry.set(tagName, BaseClass);
   }
 
   get(tagName) {
-    return this.customElementsRegistry[tagName];
+    return this.customElementsRegistry.get(tagName);
   }
 }
 
 // mock top level aliases (globalThis === window)
 // https://developer.mozilla.org/en-US/docs/Web/API/Window
-globalThis.addEventListener = noop;
-globalThis.document = new Document();
-globalThis.customElements = new CustomElementsRegistry();
-globalThis.HTMLElement = HTMLElement;
\ No newline at end of file
+globalThis.addEventListener = globalThis.addEventListener ?? noop;
+globalThis.document = globalThis.document ?? new Document();
+globalThis.customElements = globalThis.customElements ?? new CustomElementsRegistry();
+globalThis.HTMLElement = globalThis.HTMLElement ?? HTMLElement;
\ No newline at end of file
diff --git a/node_modules/wc-compiler/src/wcc.js b/node_modules/wc-compiler/src/wcc.js
index 887e0b6..53c34ce 100644
--- a/node_modules/wc-compiler/src/wcc.js
+++ b/node_modules/wc-compiler/src/wcc.js
@@ -134,9 +134,7 @@ async function initializeCustomElement(elementURL, tagName, attrs = [], definiti
 
   // https://github.com/ProjectEvergreen/wcc/pull/67/files#r902061804
   const { pathname } = elementURL;
-  const element = tagName
-    ? customElements.get(tagName)
-    : (await import(pathname)).default;
+  const element = customElements.get(tagName) ?? (await import(pathname)).default;
   const dataLoader = (await import(pathname)).getData;
   const data = props
     ? props
@@ -155,6 +153,7 @@ async function initializeCustomElement(elementURL, tagName, attrs = [], definiti
       }
     });
   
+    console.log('WCC initializeCustomElement->connectedCallback')
     await elementInstance.connectedCallback();
   
     return elementInstance;
@@ -162,6 +161,7 @@ async function initializeCustomElement(elementURL, tagName, attrs = [], definiti
 }
 
 async function renderToString(elementURL, wrappingEntryTag = true, props = {}) {
+  console.log('renderToString', { elementURL });
   const definitions = [];
   const elementTagName = wrappingEntryTag && await getTagName(elementURL);
   const isEntry = !!elementTagName;
